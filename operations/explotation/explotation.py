# -*- coding: utf-8 -*-
"""explotation.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/117kR7SFXzpqxlhbgWB_0KFFk77Hvy09l
"""

# !pip install duckdb

import duckdb
import pandas as pd
import os

# from google.colab import drive
# drive.mount('/content/drive')

"""# Load tables from trusted zone"""

# con = duckdb.connect(database='/content/drive/MyDrive/projecteADSDB/trusted/trusted.duckdb', read_only=False)

# l = con.execute("SHOW TABLES").fetchall()
# namelist = list([t for (t,) in l])

# dftable = {}

# for table in namelist:
#   dftable[table] = con.execute(f'SELECT * FROM {table}').df()

# """close trusted connection"""

# con.close()

# """# Store tables in explotation zone"""

# con = duckdb.connect(database='/content/drive/MyDrive/projecteADSDB/explotation/explotation.duckdb', read_only=False)

# for table in namelist:
#   df = dftable[table]
#   con.execute(f"DROP TABLE IF EXISTS {table}")
#   con.execute(f"CREATE TABLE IF NOT EXISTS {table} AS SELECT * FROM df")

# con.execute("SHOW TABLES").fetchall()

# """close explotation connection"""

# con.close()

"""# EXECUTION OF THE ZONE"""

def execute_explotation():

  dirname = os.path.dirname(__file__)

  pardir = os.path.join(dirname, '../trusted')

  # connect to trusted database
  con = duckdb.connect(database= os.path.join(pardir, 'trusted.duckdb'), read_only=False)

  l = con.execute("SHOW TABLES").fetchall()
  namelist = list([t for (t,) in l])

  dftable = {}

  # load data from trusted 
  for table in namelist:
    dftable[table] = con.execute(f'SELECT * FROM {table}').df()

  # close trusted connection
  con.close()

  # create duckdb database in explotation
  con = duckdb.connect(database=os.path.join(dirname, 'explotation.duckdb'), read_only=False)

  # store tables in trusted database
  for table in namelist:
    df = dftable[table]
    con.execute(f"DROP TABLE IF EXISTS {table}")
    con.execute(f"CREATE TABLE IF NOT EXISTS {table} AS SELECT * FROM df")

  # close explotation connection
  con.close()