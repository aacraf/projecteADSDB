# -*- coding: utf-8 -*-
"""tableRenaming.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ZHXfPy5r2vg_QQqZcP_c5KsDmwrj31Lx
"""

import duckdb
import pandas as pd
import os


currentdir = os.path.dirname(__file__)


"""# EXECUTION OF THE PROCESS

"""


def execute_tablerenaming():
    dirname = os.path.dirname(__file__)

    # connect to explotation database
    con = duckdb.connect(database=os.path.join(dirname, '../storage/explotation.duckdb'), read_only=False)

    # retrive tables
    l = con.execute("SHOW TABLES").fetchall()
    out = list([t for (t,) in l if t.startswith('ind_wbg_')])

    # get all the tables with prefix ind_wbg

    dictind = {}

    for t in out:
        # obtain the dataframe and insert it into dictionary
        dictind[t] = con.execute(f'SELECT * FROM {t}').df()

    for t in dictind:
        df = dictind[t]

        df.drop_duplicates(inplace=True)

        # rename important columns
        df.rename(columns={'economy': 'Country Code', 'time': 'year'}, inplace=True)

        df["year"] = df.apply(lambda x: (x['year'])[2:], axis=1)

        df['year'] = df['year'].astype(int)

        con.execute(f'DROP TABLE IF EXISTS {t};')
        con.execute(f'CREATE TABLE IF NOT EXISTS {t} AS SELECT * FROM df')
    # close the connection
    con.close()