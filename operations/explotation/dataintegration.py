# -*- coding: utf-8 -*-
"""dataIntegration.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1aLkeEvxrkqrJ4zkwDtpAKrz8nC7uWwxg

# EXPLOTATION ZONE

1. Load data
2. Integrate data
3. Perform concrete data quality

## 1. Load data from trusted zone
"""

#!pip install duckdb

import duckdb
import pandas as pd
import os

# from google.colab import drive
# drive.mount('/content/drive')

# con = duckdb.connect(database='/content/drive/MyDrive/projecteADSDB/explotation/explotation.duckdb', read_only=False)

# df_governance = pd.read_sql("SELECT * FROM Governance_Data", con)
# df_olympics = pd.read_sql("SELECT * FROM Olympics_Data", con)
# df_countrylevel = pd.read_sql("SELECT * FROM Country_Level_Data", con)

# df_governance.head()

# df_olympics.head()

# df_countrylevel.head()

# """## 2.2. Integrate with data governance

# ## 2.2.2. integrate dataframes
# """

# data = pd.merge(df_countrylevel, df_governance, left_on=['year', 'iso'], right_on=['year', 'Country Code'])
# data.drop(columns=['Country Code'], inplace=True)

# data.drop(columns=['notes', 'population_%', 'GDP_%', 'land_area_%'])

# """# Store data"""

# con.execute("DROP TABLE IF EXISTS Governance_Data;")
# con.execute("DROP TABLE IF EXISTS Olympics_Data;")

# con.execute("DROP TABLE IF EXISTS Olympics_Data;")
# con.execute("CREATE TABLE IF NOT EXISTS Olympics_Data AS SELECT * FROM df_olympics")

# con.execute("DROP TABLE IF EXISTS Country_Data")
# con.execute("CREATE TABLE IF NOT EXISTS Country_Data AS SELECT * FROM data")

# con.execute("SHOW TABLES").fetchall()

# con.close()

# """# EXECUTION OF PROCESS"""

def execute_dataIntegration():

  dirname = os.path.dirname(__file__)

  # connect to explotation database
  con = duckdb.connect(database=os.path.join(dirname, 'explotation.duckdb'), read_only=False)

  # load data from explotation database
  df_governance = pd.read_sql("SELECT * FROM Governance_Data", con)
  df_olympics = pd.read_sql("SELECT * FROM Olympics_Data", con)
  df_countrylevel = pd.read_sql("SELECT * FROM Country_Level_Data", con)

  #integrate country data
  data = pd.merge(df_countrylevel, df_governance, left_on=['year', 'iso'], right_on=['year', 'Country Code'])
  data.drop(columns=['Country Code'], inplace=True)

  # drop irrelevant columns
  data.drop(columns=['notes', 'population_%', 'GDP_%', 'land_area_%'])


  # drop individual tables
  con.execute("DROP TABLE IF EXISTS Governance_Data;")
  con.execute("DROP TABLE IF EXISTS Olympics_Data;")
  con.execute("DROP TABLE IF EXISTS Country_Level_Data;")

  # store olympics data table
  con.execute("DROP TABLE IF EXISTS Olympics_Data;")
  con.execute("CREATE TABLE IF NOT EXISTS Olympics_Data AS SELECT * FROM df_olympics")

  # store country data table
  con.execute("DROP TABLE IF EXISTS Country_Data")
  con.execute("CREATE TABLE IF NOT EXISTS Country_Data AS SELECT * FROM data")

  # close explotation database connection
  con.close()